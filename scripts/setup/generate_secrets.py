#!/usr/bin/env python
# This tools generates local_settings_generated.py using the template

import sys, os, os.path

sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..', '..'))
os.environ['DJANGO_SETTINGS_MODULE'] = 'zproject.settings'

from django.utils.crypto import get_random_string
from zerver.lib.utils import generate_random_token

os.chdir(os.path.join(os.path.dirname(__file__), '..', '..'))

CAMO_CONFIG_FILENAME = '/etc/default/camo'

AUTOGENERATED_SETTINGS = ['shared_secret', 'avatar_salt', 'rabbitmq_password', 'local_database_password',
                          'initial_password_salt']

def generate_camo_config_file(camo_key):
    camo_config = """ENABLED=yes
PORT=9292
CAMO_KEY=%s
""" % (camo_key,)
    with open(CAMO_CONFIG_FILENAME, 'w') as camo_file:
        camo_file.write(camo_config)
    print "Generated Camo config file %s" % (CAMO_CONFIG_FILENAME,)

def generate_django_secretkey():
    # Secret key generation taken from Django's startproject.py
    chars = 'abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)'
    return get_random_string(50, chars)

def generate_secrets(development=False):
    if development:
        OUTPUT_SETTINGS_FILENAME = "zproject/dev-secrets.conf"
    else:
        OUTPUT_SETTINGS_FILENAME = "/etc/zulip/zulip-secrets.conf"

    lines = ['[secrets]\n']

    def config_line(var, value):
        return "%s = %s\n" % (var, value)

    for name in AUTOGENERATED_SETTINGS:
        lines.append(config_line(name, generate_random_token(64)))

    lines.append(config_line('secret_key', generate_django_secretkey()))
    camo_key = get_random_string(64)
    lines.append(config_line('camo_key', camo_key))
    if not development:
        # Write the Camo config file directly
        generate_camo_config_file(camo_key)

    out = open(OUTPUT_SETTINGS_FILENAME, 'w')
    out.write("".join(lines))
    out.close()

    print "Generated %s with auto-generated secrets!" % (OUTPUT_SETTINGS_FILENAME,)

if __name__ == '__main__':

    development = False
    extra_args = sys.argv[1:]

    if len(extra_args) and extra_args[0] in ('-d', '--development'):
        development = True

    generate_secrets(development)
